{"version":3,"sources":["jquery.js"],"names":["window","$","jQuery","selectorOrArrayOrTemplate","elements","createElement","document","querySelectorAll","Array","string","container","innerHTML","trim","content","firstChild","api","Object","create","prototype","assign","oldApi","fn","constructor","jquery","get","index","appendTo","node","Element","console","log","each","appendChild","el","append","children","HTMLCollection","i","length","find","selector","array","elements2","from","concat","call","parent","indexOf","parentNode","push","print","addClass","className","element","classList","add","end"],"mappings":"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","file":"jquery.5af3d1d3.map","sourceRoot":"..\\src","sourcesContent":["window.$ = window.jQuery = function(selectorOrArrayOrTemplate) {\r\n  let elements;\r\n  if (typeof selectorOrArrayOrTemplate === \"string\") {\r\n    if (selectorOrArrayOrTemplate[0] === \"<\") {\r\n      // 创建 div\r\n      elements = [createElement(selectorOrArrayOrTemplate)];\r\n    } else {\r\n      // 查找 div\r\n      elements = document.querySelectorAll(selectorOrArrayOrTemplate);\r\n    }\r\n  } else if (selectorOrArrayOrTemplate instanceof Array) {\r\n    elements = selectorOrArrayOrTemplate;\r\n  }\r\n\r\n  function createElement(string) {\r\n    const container = document.createElement(\"template\");\r\n    container.innerHTML = string.trim();\r\n    return container.content.firstChild;\r\n  }\r\n  // api 可以操作elements\r\n  const api = Object.create(jQuery.prototype) // 创建一个对象，这个对象的 __proto__ 为括号里面的东西\r\n  // const api = {__proto__: jQuery.prototype}\r\n  Object.assign(api, {\r\n    elements: elements,\r\n    oldApi: selectorOrArrayOrTemplate.oldApi\r\n  })\r\n  // api.elements = elements\r\n  // api.oldApi = selectorOrArrayOrTemplate.oldApi\r\n  return api\r\n};\r\n\r\njQuery.fn = jQuery.prototype = {\r\n  constructor: jQuery,\r\n  jquery: true,\r\n  get(index) {\r\n    return this.elements[index];\r\n    // 统一说明 为什么 这里变成了 this. 因为之前elements 我们可以直接访问到 \r\n    // 但是 现在使用原型节省内存之后我们访问不到了 elements作用域不在这块 所以需要this指向api\r\n  },\r\n  appendTo(node) {\r\n    if (node instanceof Element) {\r\n      console.log(node);\r\n      this.each(el => node.appendChild(el));\r\n    } else if (node.jquery === true) {\r\n      this.each(el => node.get(0).appendChild(el));\r\n    }\r\n  },\r\n  append(children) {\r\n    if (children instanceof Element) {\r\n      this.get(0).appendChild(children);\r\n    } else if (children instanceof HTMLCollection) {\r\n      for (let i = 0; i < children.length; i++) {\r\n        this.get(0).appendChild(children[i]);\r\n      }\r\n    } else if (children.jquery === true) {\r\n      children.each(node => this.get(0).appendChild(node));\r\n    }\r\n  },\r\n  find(selector) {\r\n    let array = [];\r\n    for (let i = 0; i < this.elements.length; i++) {\r\n      const elements2 = Array.from(this.elements[i].querySelectorAll(selector));\r\n      array = array.concat(this.elements2);\r\n    }\r\n    array.oldApi = this; // this 就是 旧 api\r\n    return jQuery(array);\r\n  },\r\n  each(fn) {\r\n    console.log(this);\r\n    for (let i = 0; i < this.elements.length; i++) {\r\n      fn.call(null, this.elements[i], i);\r\n    }\r\n    return this;\r\n  },\r\n  parent() {\r\n    const array = [];\r\n    this.each(node => {\r\n      if (array.indexOf(node.parentNode) === -1) {\r\n        array.push(node.parentNode);\r\n      }\r\n    });\r\n    return jQuery(array);\r\n  },\r\n  children() {\r\n    const array = [];\r\n    this.each(node => {\r\n      if (array.indexOf(node.parentNode) === -1) {\r\n        array.push(...node.children);\r\n      }\r\n    });\r\n    return jQuery(array);\r\n  },\r\n  print() {\r\n    console.log(this.elements);\r\n  },\r\n  // 闭包：函数访问外部的变量\r\n  addClass(className) {\r\n    for (let i = 0; i < this.elements.length; i++) {\r\n      const element = this.elements[i];\r\n      element.classList.add(className);\r\n    }\r\n    return this;\r\n  },\r\n  end() {\r\n    return this.oldApi; // this 就是新 api\r\n  }\r\n};"]}